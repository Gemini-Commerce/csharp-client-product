/*
 * Product Service
 *
 * API for managing products
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using product.Model;
using product.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace product.Test.Model
{
    /// <summary>
    ///  Class for testing ProductListProductsResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProductListProductsResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProductListProductsResponse
        //private ProductListProductsResponse instance;

        public ProductListProductsResponseTests()
        {
            // TODO uncomment below to create an instance of ProductListProductsResponse
            //instance = new ProductListProductsResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductListProductsResponse
        /// </summary>
        [Fact]
        public void ProductListProductsResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProductListProductsResponse
            //Assert.IsType<ProductListProductsResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Products'
        /// </summary>
        [Fact]
        public void ProductsTest()
        {
            // TODO unit test for the property 'Products'
        }

        /// <summary>
        /// Test the property 'NextPageToken'
        /// </summary>
        [Fact]
        public void NextPageTokenTest()
        {
            // TODO unit test for the property 'NextPageToken'
        }
    }
}
