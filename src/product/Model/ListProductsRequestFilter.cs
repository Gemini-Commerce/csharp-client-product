/*
 * Product Service
 *
 * API for managing products
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = product.Client.OpenAPIDateConverter;

namespace product.Model
{
    /// <summary>
    /// ListProductsRequestFilter
    /// </summary>
    [DataContract(Name = "ListProductsRequestFilter")]
    public partial class ListProductsRequestFilter : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ListProductsRequestFilter" /> class.
        /// </summary>
        /// <param name="createdAtStart">createdAtStart.</param>
        /// <param name="createdAtEnd">createdAtEnd.</param>
        /// <param name="updatedAtStart">updatedAtStart.</param>
        /// <param name="updatedAtEnd">updatedAtEnd.</param>
        /// <param name="status">status.</param>
        public ListProductsRequestFilter(DateTime createdAtStart = default(DateTime), DateTime createdAtEnd = default(DateTime), DateTime updatedAtStart = default(DateTime), DateTime updatedAtEnd = default(DateTime), bool status = default(bool))
        {
            this.CreatedAtStart = createdAtStart;
            this.CreatedAtEnd = createdAtEnd;
            this.UpdatedAtStart = updatedAtStart;
            this.UpdatedAtEnd = updatedAtEnd;
            this.Status = status;
        }

        /// <summary>
        /// Gets or Sets CreatedAtStart
        /// </summary>
        [DataMember(Name = "createdAtStart", EmitDefaultValue = false)]
        public DateTime CreatedAtStart { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAtEnd
        /// </summary>
        [DataMember(Name = "createdAtEnd", EmitDefaultValue = false)]
        public DateTime CreatedAtEnd { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAtStart
        /// </summary>
        [DataMember(Name = "updatedAtStart", EmitDefaultValue = false)]
        public DateTime UpdatedAtStart { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAtEnd
        /// </summary>
        [DataMember(Name = "updatedAtEnd", EmitDefaultValue = false)]
        public DateTime UpdatedAtEnd { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = true)]
        public bool Status { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ListProductsRequestFilter {\n");
            sb.Append("  CreatedAtStart: ").Append(CreatedAtStart).Append("\n");
            sb.Append("  CreatedAtEnd: ").Append(CreatedAtEnd).Append("\n");
            sb.Append("  UpdatedAtStart: ").Append(UpdatedAtStart).Append("\n");
            sb.Append("  UpdatedAtEnd: ").Append(UpdatedAtEnd).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
