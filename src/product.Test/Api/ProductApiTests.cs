/*
 * Product Service
 *
 * API for managing products
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using product.Client;
using product.Api;
// uncomment below to import models
//using product.Model;

namespace product.Test.Api
{
    /// <summary>
    ///  Class for testing ProductApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProductApiTests : IDisposable
    {
        private ProductApi instance;

        public ProductApiTests()
        {
            instance = new ProductApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProductApi
            //Assert.IsType<ProductApi>(instance);
        }

        /// <summary>
        /// Test ProductAddMediaGalleryEntry
        /// </summary>
        [Fact]
        public void ProductAddMediaGalleryEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductAddMediaGalleryEntryRequest body = null;
            //var response = instance.ProductAddMediaGalleryEntry(body);
            //Assert.IsType<ProductAddMediaGalleryEntryResponse>(response);
        }

        /// <summary>
        /// Test ProductBulkAddAssetsEntries
        /// </summary>
        [Fact]
        public void ProductBulkAddAssetsEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductBulkAddAssetsEntriesRequest body = null;
            //var response = instance.ProductBulkAddAssetsEntries(body);
            //Assert.IsType<ProductBulkAddAssetsEntriesResponse>(response);
        }

        /// <summary>
        /// Test ProductBulkCreateAttribute
        /// </summary>
        [Fact]
        public void ProductBulkCreateAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerBulkCreateAttributeRequest body = null;
            //var response = instance.ProductBulkCreateAttribute(body);
            //Assert.IsType<EntitymanagerBulkCreateAttributeResponse>(response);
        }

        /// <summary>
        /// Test ProductBulkDeleteProducts
        /// </summary>
        [Fact]
        public void ProductBulkDeleteProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductBulkDeleteProductsRequest body = null;
            //var response = instance.ProductBulkDeleteProducts(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ProductBulkRemoveAssetsEntries
        /// </summary>
        [Fact]
        public void ProductBulkRemoveAssetsEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductBulkRemoveAssetsEntriesRequest body = null;
            //var response = instance.ProductBulkRemoveAssetsEntries(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ProductBulkUpdate
        /// </summary>
        [Fact]
        public void ProductBulkUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductBulkUpdateRequest body = null;
            //var response = instance.ProductBulkUpdate(body);
            //Assert.IsType<ProductBulkUpdateResponse>(response);
        }

        /// <summary>
        /// Test ProductBulkUpdateAssetsEntries
        /// </summary>
        [Fact]
        public void ProductBulkUpdateAssetsEntriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductBulkUpdateAssetsEntriesRequest body = null;
            //var response = instance.ProductBulkUpdateAssetsEntries(body);
            //Assert.IsType<ProductBulkUpdateAssetsEntriesResponse>(response);
        }

        /// <summary>
        /// Test ProductBulkUpdateV2
        /// </summary>
        [Fact]
        public void ProductBulkUpdateV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductBulkUpdateRequestV2 body = null;
            //var response = instance.ProductBulkUpdateV2(body);
            //Assert.IsType<ProductBulkUpdateResponseV2>(response);
        }

        /// <summary>
        /// Test ProductCreateAttributeGroup
        /// </summary>
        [Fact]
        public void ProductCreateAttributeGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerCreateAttributeGroupRequest body = null;
            //var response = instance.ProductCreateAttributeGroup(body);
            //Assert.IsType<EntitymanagerAttributeGroup>(response);
        }

        /// <summary>
        /// Test ProductCreateAttributeOptions
        /// </summary>
        [Fact]
        public void ProductCreateAttributeOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerCreateAttributeOptionsRequest body = null;
            //var response = instance.ProductCreateAttributeOptions(body);
            //Assert.IsType<EntitymanagerCreateAttributeOptionsResponse>(response);
        }

        /// <summary>
        /// Test ProductCreateEntity
        /// </summary>
        [Fact]
        public void ProductCreateEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerEntity body = null;
            //var response = instance.ProductCreateEntity(body);
            //Assert.IsType<EntitymanagerCreateEntityResponse>(response);
        }

        /// <summary>
        /// Test ProductCreateOptionsList
        /// </summary>
        [Fact]
        public void ProductCreateOptionsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerCreateOptionsListRequest body = null;
            //var response = instance.ProductCreateOptionsList(body);
            //Assert.IsType<EntitymanagerCreateOptionsListResponse>(response);
        }

        /// <summary>
        /// Test ProductCreateProduct
        /// </summary>
        [Fact]
        public void ProductCreateProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductCreateProductRequest body = null;
            //var response = instance.ProductCreateProduct(body);
            //Assert.IsType<ProductCreateProductResponse>(response);
        }

        /// <summary>
        /// Test ProductCreateProductV2
        /// </summary>
        [Fact]
        public void ProductCreateProductV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductCreateProductRequestV2 body = null;
            //var response = instance.ProductCreateProductV2(body);
            //Assert.IsType<ProductCreateProductResponseV2>(response);
        }

        /// <summary>
        /// Test ProductDelete
        /// </summary>
        [Fact]
        public void ProductDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductDeleteRequest body = null;
            //var response = instance.ProductDelete(body);
            //Assert.IsType<ProductDeleteResponse>(response);
        }

        /// <summary>
        /// Test ProductDeleteAttribute
        /// </summary>
        [Fact]
        public void ProductDeleteAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerDeleteAttributeRequest body = null;
            //var response = instance.ProductDeleteAttribute(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ProductDeleteProduct
        /// </summary>
        [Fact]
        public void ProductDeleteProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductDeleteProductRequest body = null;
            //var response = instance.ProductDeleteProduct(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ProductGetAttributeGroup
        /// </summary>
        [Fact]
        public void ProductGetAttributeGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerGetAttributeGroupRequest body = null;
            //var response = instance.ProductGetAttributeGroup(body);
            //Assert.IsType<EntitymanagerAttributeGroup>(response);
        }

        /// <summary>
        /// Test ProductGetAttributeOption
        /// </summary>
        [Fact]
        public void ProductGetAttributeOptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerGetAttributeOptionRequest body = null;
            //var response = instance.ProductGetAttributeOption(body);
            //Assert.IsType<EntitymanagerGetAttributeOptionResponse>(response);
        }

        /// <summary>
        /// Test ProductGetAttributeOptions
        /// </summary>
        [Fact]
        public void ProductGetAttributeOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerGetAttributeOptionsRequest body = null;
            //var response = instance.ProductGetAttributeOptions(body);
            //Assert.IsType<EntitymanagerGetAttributeOptionsResponse>(response);
        }

        /// <summary>
        /// Test ProductGetEntity
        /// </summary>
        [Fact]
        public void ProductGetEntityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerEntityRequest body = null;
            //var response = instance.ProductGetEntity(body);
            //Assert.IsType<EntitymanagerEntity>(response);
        }

        /// <summary>
        /// Test ProductGetOptionsList
        /// </summary>
        [Fact]
        public void ProductGetOptionsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerGetOptionsListRequest body = null;
            //var response = instance.ProductGetOptionsList(body);
            //Assert.IsType<EntitymanagerGetOptionsListResponse>(response);
        }

        /// <summary>
        /// Test ProductGetProduct
        /// </summary>
        [Fact]
        public void ProductGetProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductGetProductRequest body = null;
            //var response = instance.ProductGetProduct(body);
            //Assert.IsType<ProductGetProductResponse>(response);
        }

        /// <summary>
        /// Test ProductGetProductByCode
        /// </summary>
        [Fact]
        public void ProductGetProductByCodeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductGetProductByCodeRequest body = null;
            //var response = instance.ProductGetProductByCode(body);
            //Assert.IsType<ProductGetProductByCodeResponse>(response);
        }

        /// <summary>
        /// Test ProductGetProductByUrlKey
        /// </summary>
        [Fact]
        public void ProductGetProductByUrlKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductGetProductByUrlKeyRequest body = null;
            //var response = instance.ProductGetProductByUrlKey(body);
            //Assert.IsType<ProductGetProductByUrlKeyResponse>(response);
        }

        /// <summary>
        /// Test ProductListAttributeGroups
        /// </summary>
        [Fact]
        public void ProductListAttributeGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerListAttributeGroupsRequest body = null;
            //var response = instance.ProductListAttributeGroups(body);
            //Assert.IsType<EntitymanagerListAttributeGroupsResponse>(response);
        }

        /// <summary>
        /// Test ProductListAttributeOptions
        /// </summary>
        [Fact]
        public void ProductListAttributeOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerListAttributeOptionsRequest body = null;
            //var response = instance.ProductListAttributeOptions(body);
            //Assert.IsType<EntitymanagerListAttributeOptionsResponse>(response);
        }

        /// <summary>
        /// Test ProductListEntities
        /// </summary>
        [Fact]
        public void ProductListEntitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerListEntitiesRequest body = null;
            //var response = instance.ProductListEntities(body);
            //Assert.IsType<EntitymanagerListEntitiesResponse>(response);
        }

        /// <summary>
        /// Test ProductListOptionsLists
        /// </summary>
        [Fact]
        public void ProductListOptionsListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerListOptionsListsRequest body = null;
            //var response = instance.ProductListOptionsLists(body);
            //Assert.IsType<EntitymanagerListOptionsListsResponse>(response);
        }

        /// <summary>
        /// Test ProductListProducts
        /// </summary>
        [Fact]
        public void ProductListProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductListProductsRequest body = null;
            //var response = instance.ProductListProducts(body);
            //Assert.IsType<ProductListProductsResponse>(response);
        }

        /// <summary>
        /// Test ProductListProductsByIds
        /// </summary>
        [Fact]
        public void ProductListProductsByIdsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductListProductsByIdsRequest body = null;
            //var response = instance.ProductListProductsByIds(body);
            //Assert.IsType<ProductListProductsByIdsResponse>(response);
        }

        /// <summary>
        /// Test ProductListProductsBySku
        /// </summary>
        [Fact]
        public void ProductListProductsBySkuTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductListProductsBySkuRequest body = null;
            //var response = instance.ProductListProductsBySku(body);
            //Assert.IsType<ProductListProductsBySkuResponse>(response);
        }

        /// <summary>
        /// Test ProductListVariantsBySku
        /// </summary>
        [Fact]
        public void ProductListVariantsBySkuTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductListVariantsBySkuRequest body = null;
            //var response = instance.ProductListVariantsBySku(body);
            //Assert.IsType<ProductListVariantsBySkuResponse>(response);
        }

        /// <summary>
        /// Test ProductRemoveMediaGalleryEntry
        /// </summary>
        [Fact]
        public void ProductRemoveMediaGalleryEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductRemoveMediaGalleryEntryRequest body = null;
            //var response = instance.ProductRemoveMediaGalleryEntry(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ProductUpdateAttribute
        /// </summary>
        [Fact]
        public void ProductUpdateAttributeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerUpdateAttributeRequest body = null;
            //var response = instance.ProductUpdateAttribute(body);
            //Assert.IsType<EntitymanagerAttribute>(response);
        }

        /// <summary>
        /// Test ProductUpdateAttributeGroup
        /// </summary>
        [Fact]
        public void ProductUpdateAttributeGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerUpdateAttributeGroupRequest body = null;
            //var response = instance.ProductUpdateAttributeGroup(body);
            //Assert.IsType<EntitymanagerAttributeGroup>(response);
        }

        /// <summary>
        /// Test ProductUpdateAttributeOptions
        /// </summary>
        [Fact]
        public void ProductUpdateAttributeOptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerUpdateAttributeOptionsRequest body = null;
            //var response = instance.ProductUpdateAttributeOptions(body);
            //Assert.IsType<EntitymanagerUpdateAttributeOptionsResponse>(response);
        }

        /// <summary>
        /// Test ProductUpdateMediaGalleryEntry
        /// </summary>
        [Fact]
        public void ProductUpdateMediaGalleryEntryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductUpdateMediaGalleryEntryRequest body = null;
            //var response = instance.ProductUpdateMediaGalleryEntry(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ProductUpdateOptionsList
        /// </summary>
        [Fact]
        public void ProductUpdateOptionsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EntitymanagerUpdateOptionsListRequest body = null;
            //var response = instance.ProductUpdateOptionsList(body);
            //Assert.IsType<EntitymanagerUpdateOptionsListResponse>(response);
        }

        /// <summary>
        /// Test ProductUpdateProduct
        /// </summary>
        [Fact]
        public void ProductUpdateProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductUpdateProductRequest body = null;
            //var response = instance.ProductUpdateProduct(body);
            //Assert.IsType<ProductUpdateProductResponse>(response);
        }

        /// <summary>
        /// Test ProductUpdateProductV2
        /// </summary>
        [Fact]
        public void ProductUpdateProductV2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProductUpdateProductRequestV2 body = null;
            //var response = instance.ProductUpdateProductV2(body);
            //Assert.IsType<Object>(response);
        }
    }
}
