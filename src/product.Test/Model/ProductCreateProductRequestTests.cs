/*
 * Product Service
 *
 * API for managing products
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using product.Model;
using product.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace product.Test.Model
{
    /// <summary>
    ///  Class for testing ProductCreateProductRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProductCreateProductRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProductCreateProductRequest
        //private ProductCreateProductRequest instance;

        public ProductCreateProductRequestTests()
        {
            // TODO uncomment below to create an instance of ProductCreateProductRequest
            //instance = new ProductCreateProductRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductCreateProductRequest
        /// </summary>
        [Fact]
        public void ProductCreateProductRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProductCreateProductRequest
            //Assert.IsType<ProductCreateProductRequest>(instance);
        }

        /// <summary>
        /// Test the property 'TenantId'
        /// </summary>
        [Fact]
        public void TenantIdTest()
        {
            // TODO unit test for the property 'TenantId'
        }

        /// <summary>
        /// Test the property 'EntityType'
        /// </summary>
        [Fact]
        public void EntityTypeTest()
        {
            // TODO unit test for the property 'EntityType'
        }

        /// <summary>
        /// Test the property 'EntityCode'
        /// </summary>
        [Fact]
        public void EntityCodeTest()
        {
            // TODO unit test for the property 'EntityCode'
        }

        /// <summary>
        /// Test the property 'Code'
        /// </summary>
        [Fact]
        public void CodeTest()
        {
            // TODO unit test for the property 'Code'
        }

        /// <summary>
        /// Test the property 'IsConfigurable'
        /// </summary>
        [Fact]
        public void IsConfigurableTest()
        {
            // TODO unit test for the property 'IsConfigurable'
        }

        /// <summary>
        /// Test the property 'VariantAttributes'
        /// </summary>
        [Fact]
        public void VariantAttributesTest()
        {
            // TODO unit test for the property 'VariantAttributes'
        }

        /// <summary>
        /// Test the property 'IsVirtual'
        /// </summary>
        [Fact]
        public void IsVirtualTest()
        {
            // TODO unit test for the property 'IsVirtual'
        }

        /// <summary>
        /// Test the property 'IsGiftcard'
        /// </summary>
        [Fact]
        public void IsGiftcardTest()
        {
            // TODO unit test for the property 'IsGiftcard'
        }

        /// <summary>
        /// Test the property 'HasConfigurator'
        /// </summary>
        [Fact]
        public void HasConfiguratorTest()
        {
            // TODO unit test for the property 'HasConfigurator'
        }

        /// <summary>
        /// Test the property 'UrlKey'
        /// </summary>
        [Fact]
        public void UrlKeyTest()
        {
            // TODO unit test for the property 'UrlKey'
        }

        /// <summary>
        /// Test the property 'MaxSaleableQuantity'
        /// </summary>
        [Fact]
        public void MaxSaleableQuantityTest()
        {
            // TODO unit test for the property 'MaxSaleableQuantity'
        }

        /// <summary>
        /// Test the property 'MediaVariantAttributes'
        /// </summary>
        [Fact]
        public void MediaVariantAttributesTest()
        {
            // TODO unit test for the property 'MediaVariantAttributes'
        }

        /// <summary>
        /// Test the property 'Attributes'
        /// </summary>
        [Fact]
        public void AttributesTest()
        {
            // TODO unit test for the property 'Attributes'
        }

        /// <summary>
        /// Test the property 'Variants'
        /// </summary>
        [Fact]
        public void VariantsTest()
        {
            // TODO unit test for the property 'Variants'
        }
    }
}
